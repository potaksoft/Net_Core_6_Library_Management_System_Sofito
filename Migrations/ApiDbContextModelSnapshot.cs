// <auto-generated />
using System;
using Library_Apı_Sysytem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Library_Apı_Sysytem.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    partial class ApiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.32")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Library_Apı_Sysytem.Entities.Book", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BookCategoryId")
                        .HasColumnType("int");

                    b.Property<bool>("Ordered")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BookCategoryId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Yasar Kemal",
                            BookCategoryId = 1,
                            Ordered = false,
                            Title = "Yer Demir Gök Bakır"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Yasar Kemal",
                            BookCategoryId = 1,
                            Ordered = false,
                            Title = "Ortadirek"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Yasar Kemal",
                            BookCategoryId = 1,
                            Ordered = false,
                            Title = "Kuşlar da Gitti"
                        },
                        new
                        {
                            Id = 4,
                            Author = "Yasar Kemal",
                            BookCategoryId = 1,
                            Ordered = false,
                            Title = "Karıncanın Su İçtiği"
                        },
                        new
                        {
                            Id = 5,
                            Author = "Orhan Pamuk",
                            BookCategoryId = 1,
                            Ordered = false,
                            Title = "Masumiyet Müzesi"
                        },
                        new
                        {
                            Id = 6,
                            Author = "Orhan Pamuk",
                            BookCategoryId = 1,
                            Ordered = false,
                            Title = "Benim Adım Kırmızı"
                        },
                        new
                        {
                            Id = 7,
                            Author = "Orhan Pamuk",
                            BookCategoryId = 1,
                            Ordered = false,
                            Title = "Veba Geceleri"
                        },
                        new
                        {
                            Id = 8,
                            Author = "Orhan Pamuk",
                            BookCategoryId = 1,
                            Ordered = false,
                            Title = "Cevdet Bey ve Oğulları"
                        },
                        new
                        {
                            Id = 9,
                            Author = "Orhan Pamuk",
                            BookCategoryId = 1,
                            Ordered = false,
                            Title = "Kafamda Bir Tuhaflık"
                        },
                        new
                        {
                            Id = 10,
                            Author = "Stephen King",
                            BookCategoryId = 2,
                            Ordered = false,
                            Title = "Medyum"
                        },
                        new
                        {
                            Id = 11,
                            Author = "Stephen King",
                            BookCategoryId = 2,
                            Ordered = false,
                            Title = "Sadist"
                        },
                        new
                        {
                            Id = 12,
                            Author = "Stephen King",
                            BookCategoryId = 2,
                            Ordered = false,
                            Title = "Yeşil Yol"
                        },
                        new
                        {
                            Id = 13,
                            Author = "Paul Barry",
                            BookCategoryId = 2,
                            Ordered = false,
                            Title = ""
                        },
                        new
                        {
                            Id = 14,
                            Author = "Joshua Bloch",
                            BookCategoryId = 2,
                            Ordered = false,
                            Title = "Java"
                        },
                        new
                        {
                            Id = 15,
                            Author = "Joshua Bloch",
                            BookCategoryId = 2,
                            Ordered = false,
                            Title = "JavaScript"
                        },
                        new
                        {
                            Id = 16,
                            Author = "Kathy Sierra and Bert Bates",
                            BookCategoryId = 2,
                            Ordered = false,
                            Title = "Head First Java"
                        },
                        new
                        {
                            Id = 17,
                            Author = "Ursula K. Le Guin",
                            BookCategoryId = 2,
                            Ordered = false,
                            Title = "Yerdeniz Büyücüsü"
                        },
                        new
                        {
                            Id = 18,
                            Author = "Ursula K. Le Guin",
                            BookCategoryId = 2,
                            Ordered = false,
                            Title = "Karanlığın Sol Eli"
                        },
                        new
                        {
                            Id = 19,
                            Author = "Ursula K. Le Guin",
                            BookCategoryId = 2,
                            Ordered = false,
                            Title = "Dünyaya Orman Denir"
                        },
                        new
                        {
                            Id = 20,
                            Author = "Marijn Haverbeke",
                            BookCategoryId = 2,
                            Ordered = false,
                            Title = "Python"
                        },
                        new
                        {
                            Id = 21,
                            Author = "Donald E. Knuth",
                            BookCategoryId = 2,
                            Ordered = false,
                            Title = "Design Pattern"
                        },
                        new
                        {
                            Id = 22,
                            Author = "Donald E. Knuth",
                            BookCategoryId = 2,
                            Ordered = false,
                            Title = "Redis"
                        },
                        new
                        {
                            Id = 23,
                            Author = "James F Kurose and Keith W Ross",
                            BookCategoryId = 3,
                            Ordered = false,
                            Title = "A Top-Down Approach: Computer Networking"
                        },
                        new
                        {
                            Id = 24,
                            Author = "Rich Seifert and James Edwards",
                            BookCategoryId = 3,
                            Ordered = false,
                            Title = "The All-New Switch Book (2nd Edition)"
                        },
                        new
                        {
                            Id = 25,
                            Author = "Rich Seifert and James Edwards",
                            BookCategoryId = 3,
                            Ordered = false,
                            Title = "The All-New Switch Book (2nd Edition)"
                        },
                        new
                        {
                            Id = 26,
                            Author = "Jerry FitzGerald, Alan Dennis, and Alexandra Durcikova",
                            BookCategoryId = 3,
                            Ordered = false,
                            Title = "Business Data Communications and Networking (14th Edition)"
                        },
                        new
                        {
                            Id = 27,
                            Author = "Forouzan",
                            BookCategoryId = 3,
                            Ordered = false,
                            Title = "Data Communications and Networking with TCP/IP Protocol Suite, 6th Edition"
                        },
                        new
                        {
                            Id = 28,
                            Author = "Gary Donahue",
                            BookCategoryId = 3,
                            Ordered = false,
                            Title = "Network Warrior, 2nd Edition"
                        },
                        new
                        {
                            Id = 29,
                            Author = "Gary Donahue",
                            BookCategoryId = 3,
                            Ordered = false,
                            Title = "Network Warrior, 2nd Edition"
                        },
                        new
                        {
                            Id = 30,
                            Author = "Gary Donahue",
                            BookCategoryId = 3,
                            Ordered = false,
                            Title = "Network Warrior, 2nd Edition"
                        },
                        new
                        {
                            Id = 31,
                            Author = "Ramesh Gaonkar",
                            BookCategoryId = 4,
                            Ordered = false,
                            Title = "Microprocessor Architecture, Programming, and Applications with the 8085 (4th Edition)"
                        },
                        new
                        {
                            Id = 32,
                            Author = "Douglas V. Hall",
                            BookCategoryId = 4,
                            Ordered = false,
                            Title = "Microprocessors and Interfacing: Programming and Hardware (Hardcover)"
                        },
                        new
                        {
                            Id = 33,
                            Author = "Douglas V. Hall",
                            BookCategoryId = 4,
                            Ordered = false,
                            Title = "Microprocessors and Interfacing: Programming and Hardware (Hardcover)"
                        },
                        new
                        {
                            Id = 34,
                            Author = "Kenneth L. Short",
                            BookCategoryId = 4,
                            Ordered = false,
                            Title = "Embedded Microprocessor Systems Design"
                        },
                        new
                        {
                            Id = 35,
                            Author = "Dr. Vibhav Kumar Sachan",
                            BookCategoryId = 4,
                            Ordered = false,
                            Title = "Digital Electronics & Microprocessor"
                        },
                        new
                        {
                            Id = 36,
                            Author = "Xiaocong Fan",
                            BookCategoryId = 4,
                            Ordered = false,
                            Title = "Real-Time Embedded Systems"
                        },
                        new
                        {
                            Id = 37,
                            Author = "Jonathan A. Dell",
                            BookCategoryId = 4,
                            Ordered = false,
                            Title = "Digital Interface Design and Application"
                        },
                        new
                        {
                            Id = 38,
                            Author = "Shigley's Mechanical Engineering Design",
                            BookCategoryId = 5,
                            Ordered = false,
                            Title = "Richard G. Budynas and Keith J. Nisbett"
                        },
                        new
                        {
                            Id = 39,
                            Author = "Shigley's Mechanical Engineering Design",
                            BookCategoryId = 5,
                            Ordered = false,
                            Title = "Richard G. Budynas and Keith J. Nisbett"
                        },
                        new
                        {
                            Id = 40,
                            Author = "Shigley's Mechanical Engineering Design",
                            BookCategoryId = 5,
                            Ordered = false,
                            Title = "Richard G. Budynas and Keith J. Nisbett"
                        },
                        new
                        {
                            Id = 41,
                            Author = "Erik Oberg",
                            BookCategoryId = 5,
                            Ordered = false,
                            Title = "Machinery's Handbook"
                        },
                        new
                        {
                            Id = 42,
                            Author = "John J. Craig",
                            BookCategoryId = 5,
                            Ordered = false,
                            Title = "Introduction to Robotics: Mechanics and Control"
                        },
                        new
                        {
                            Id = 43,
                            Author = "Robert L. Norton",
                            BookCategoryId = 5,
                            Ordered = false,
                            Title = "Machine Design"
                        },
                        new
                        {
                            Id = 44,
                            Author = "Robert L. Norton",
                            BookCategoryId = 5,
                            Ordered = false,
                            Title = "Machine Design"
                        },
                        new
                        {
                            Id = 45,
                            Author = "Frank M. White",
                            BookCategoryId = 6,
                            Ordered = false,
                            Title = "Fluid Mechanics"
                        },
                        new
                        {
                            Id = 46,
                            Author = "Claus Borgnakke and Richard E. Sonntag",
                            BookCategoryId = 6,
                            Ordered = false,
                            Title = "Fundamentals of Thermodynamics"
                        },
                        new
                        {
                            Id = 47,
                            Author = "Claus Borgnakke and Richard E. Sonntag",
                            BookCategoryId = 6,
                            Ordered = false,
                            Title = "Fundamentals of Thermodynamics"
                        },
                        new
                        {
                            Id = 48,
                            Author = "James Stewart",
                            BookCategoryId = 7,
                            Ordered = false,
                            Title = "Calculus: Early Transcendentals"
                        },
                        new
                        {
                            Id = 49,
                            Author = "Mark Ryan",
                            BookCategoryId = 7,
                            Ordered = false,
                            Title = "Calculus for Dummies"
                        },
                        new
                        {
                            Id = 50,
                            Author = "Mark Ryan",
                            BookCategoryId = 7,
                            Ordered = false,
                            Title = "Calculus for Dummies"
                        },
                        new
                        {
                            Id = 51,
                            Author = "Louis Leithold",
                            BookCategoryId = 7,
                            Ordered = false,
                            Title = "The Calculus with Analytic Geometry"
                        },
                        new
                        {
                            Id = 52,
                            Author = "Euclid",
                            BookCategoryId = 8,
                            Ordered = false,
                            Title = "Euclid's Elements"
                        },
                        new
                        {
                            Id = 53,
                            Author = "Robert Kanigel",
                            BookCategoryId = 8,
                            Ordered = false,
                            Title = "The Man Who Knew Infinity: A Life of the Genius Ramanujan"
                        },
                        new
                        {
                            Id = 54,
                            Author = "Robert Kanigel",
                            BookCategoryId = 8,
                            Ordered = false,
                            Title = "The Man Who Knew Infinity: A Life of the Genius Ramanujan"
                        },
                        new
                        {
                            Id = 55,
                            Author = "Stephen Hawking",
                            BookCategoryId = 8,
                            Ordered = false,
                            Title = "A Brief History of Time"
                        },
                        new
                        {
                            Id = 56,
                            Author = "Albert Einstein",
                            BookCategoryId = 8,
                            Ordered = false,
                            Title = "Relativity: The Special and the General Theory"
                        },
                        new
                        {
                            Id = 57,
                            Author = "Albert Einstein",
                            BookCategoryId = 8,
                            Ordered = false,
                            Title = "Relativity: The Special and the General Theory"
                        },
                        new
                        {
                            Id = 58,
                            Author = "Albert Einstein",
                            BookCategoryId = 8,
                            Ordered = false,
                            Title = "Relativity: The Special and the General Theory"
                        },
                        new
                        {
                            Id = 59,
                            Author = "Albert Einstein",
                            BookCategoryId = 8,
                            Ordered = false,
                            Title = "Relativity: The Special and the General Theory"
                        },
                        new
                        {
                            Id = 60,
                            Author = "Albert Einstein",
                            BookCategoryId = 8,
                            Ordered = false,
                            Title = "Relativity: The Special and the General Theory"
                        });
                });

            modelBuilder.Entity("Library_Apı_Sysytem.Entities.BookCategory", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"), 1L, 1);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BookCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Roman",
                            SubCategory = "Dram"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Roman",
                            SubCategory = "Bilim Kurgu"
                        },
                        new
                        {
                            Id = 3,
                            Category = "Roman",
                            SubCategory = "Biyografi"
                        },
                        new
                        {
                            Id = 4,
                            Category = "Akademik",
                            SubCategory = "Matematik"
                        },
                        new
                        {
                            Id = 5,
                            Category = "Akademik",
                            SubCategory = "Bilgisayar Bilimleri"
                        },
                        new
                        {
                            Id = 6,
                            Category = "Dergi",
                            SubCategory = "Kimya"
                        },
                        new
                        {
                            Id = 7,
                            Category = "Dergi",
                            SubCategory = "Fizik"
                        },
                        new
                        {
                            Id = 8,
                            Category = "Dil",
                            SubCategory = "Ingilizce"
                        });
                });

            modelBuilder.Entity("Library_Apı_Sysytem.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("FinePaid")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Returned")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Library_Apı_Sysytem.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("AccountStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = "de87b0a2-9f81-46c3-a8fa-ad9209ad2020",
                            AccessFailedCount = 0,
                            AccountStatus = "ACTIVE",
                            ConcurrencyStamp = "e2f6c37d-3fb7-479f-8c58-a6fd65d904b9",
                            CreatedOn = new DateTime(2024, 8, 3, 13, 28, 12, 0, DateTimeKind.Unspecified),
                            Email = "admin@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Admin",
                            LastName = "Adminlastname",
                            LockoutEnabled = false,
                            Password = "admin1992",
                            PhoneNumber = "1234567890",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "3d85ad56-45ff-4494-bc8f-9d2d95e0a5f4",
                            TwoFactorEnabled = false,
                            UserType = "EMPLOYEE"
                        },
                        new
                        {
                            Id = "4e538e24-5542-40a9-a37e-17441c53225b",
                            AccessFailedCount = 0,
                            AccountStatus = "ACTIVE",
                            ConcurrencyStamp = "92c4aec9-99d9-466a-a881-ee4f02778bd3",
                            CreatedOn = new DateTime(2024, 8, 8, 13, 14, 22, 292, DateTimeKind.Local).AddTicks(7143),
                            Email = "member@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Member",
                            LastName = "MemberLastName",
                            LockoutEnabled = false,
                            Password = "member1999",
                            PhoneNumber = "9876543210",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7a7a6d80-9794-4f2b-93c8-dac0812e625f",
                            TwoFactorEnabled = false,
                            UserType = "MEMBER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("Library_Apı_Sysytem.Entities.Book", b =>
                {
                    b.HasOne("Library_Apı_Sysytem.Entities.BookCategory", "BookCategory")
                        .WithMany()
                        .HasForeignKey("BookCategoryId");

                    b.Navigation("BookCategory");
                });

            modelBuilder.Entity("Library_Apı_Sysytem.Entities.Order", b =>
                {
                    b.HasOne("Library_Apı_Sysytem.Entities.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId");

                    b.HasOne("Library_Apı_Sysytem.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("Book");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
